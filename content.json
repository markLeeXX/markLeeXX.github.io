{"meta":{"title":"mark's BLOG","subtitle":"Android开发者","description":null,"author":"mark","url":"http://hookandroid.com","root":"/"},"pages":[{"title":"","date":"2020-11-02T02:32:57.000Z","updated":"2020-11-02T03:10:28.226Z","comments":false,"path":"tags/index.html","permalink":"http://hookandroid.com/tags/index.html","excerpt":"","text":""},{"title":"","date":"2020-11-02T02:33:09.000Z","updated":"2020-11-02T03:10:27.251Z","comments":false,"path":"categories/index.html","permalink":"http://hookandroid.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"B站网络请求","slug":"B站网络请求","date":"2021-01-25T02:30:24.000Z","updated":"2021-01-25T03:01:08.609Z","comments":true,"path":"post/bilibili.html","link":"","permalink":"http://hookandroid.com/post/bilibili.html","excerpt":"","text":"BiliApi.py 获取视频列表1https:&#x2F;&#x2F;api.bilibili.com&#x2F;x&#x2F;player&#x2F;pagelist?bvid&#x3D;BV1tp4y1i7rL&amp;jsonp&#x3D;jsonp 获取视频Url1https:&#x2F;&#x2F;api.bilibili.com&#x2F;x&#x2F;player&#x2F;playurl?cid&#x3D;217171581&amp;avid&#x3D;&amp;bvid&#x3D;BV1tp4y1i7rL&amp;qn&#x3D;80&amp;fourk&#x3D;0&amp;otype&#x3D;json 下载视频1234User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;88.0.4324.104 Safari&#x2F;537.36Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9Referer: https:&#x2F;&#x2F;www.bilibili.com&#x2F;video&#x2F;BV1tp4y1i7rLAccept-Encoding: gzip, deflate","categories":[],"tags":[{"name":"抓包","slug":"抓包","permalink":"http://hookandroid.com/tags/%E6%8A%93%E5%8C%85/"}]},{"title":"c语言入门","slug":"c语言入门","date":"2021-01-21T06:53:13.000Z","updated":"2021-01-21T11:06:16.580Z","comments":true,"path":"post/c.html","link":"","permalink":"http://hookandroid.com/post/c.html","excerpt":"","text":"宏定义12#define time 2021#define M(x, y) time*(x&gt;y?x:y) 指针12345678910111213141516171819202122232425262728293031int a = 100;int *b = &amp;a; // 内存地址赋值printf(\"值1：%d, %d\\n\", a, *b);*b = 200; // 真正赋值printf(\"值2：%d, %d\\n\", a, *b);printf(\"内存地址：%#x, %#x\\n\", a, *b);b++;// 主动修改内存地址printf(\"值3：%d, %d\\n\", a, *b);printf(\"内存地址：%#x, %#x\\n\", a, *b);int arr[] = &#123;66, 15, 100, 888, 252&#125;;printf(\"%d\\n\", sizeof(arr));printf(\"%d\\n\", sizeof(int));int len = sizeof(arr) / sizeof(int);printf(\"数组长度：%d\\n\", len);printf(\"值：%d\\n\", *(arr + 1));// 等价printf(\"值：%d\\n\", arr[1]);// 等价int *p = arr;printf(\"指针：%d\\n\", *(p + 1));// 15 取数组第一个数字printf(\"指针：%d\\n\", *p + 1);// 67 取数组第0个数字+1printf(\"指针：%d\\n\", *p++);// 66printf(\"指针：%d\\n\", *p);// 15printf(\"指针：%d\\n\", *++p);// 100printf(\"指针：%d\\n\", ++*p);// 101printf(\"指针：%d\\n\", *p);// 101","categories":[],"tags":[{"name":"C语言","slug":"C语言","permalink":"http://hookandroid.com/tags/C%E8%AF%AD%E8%A8%80/"}]},{"title":"nginx配置","slug":"nginx配置","date":"2020-11-05T06:13:33.000Z","updated":"2020-11-05T08:32:56.910Z","comments":true,"path":"post/null.html","link":"","permalink":"http://hookandroid.com/post/null.html","excerpt":"","text":"12默认配置&#x2F;etc&#x2F;nginx&#x2F;sites-enabled&#x2F;default 12345678910Xshell 从服务器下载到本地get 进入目录lcd上传到服务器put","categories":[],"tags":[{"name":"服务器","slug":"服务器","permalink":"http://hookandroid.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"nginx","slug":"nginx","permalink":"http://hookandroid.com/tags/nginx/"}]},{"title":"frida使用教程","slug":"frida使用教程","date":"2020-11-04T10:54:54.000Z","updated":"2020-11-06T07:06:23.493Z","comments":true,"path":"post/frida_use.html","link":"","permalink":"http://hookandroid.com/post/frida_use.html","excerpt":"","text":"hook代码12345678910111213141516171819202122232425262728293031323334import fridaimport sys# hook代码，采用javascript编写jscode = \"\"\"//javascript代码，重点Java.perform(function () &#123; var apkParseCompat = Java.use('com.hookandroid.apk.library.ApkParseCompat'); // 打印日志工具 console.log(Java.use(\"android.util.Log\").getStackTraceString(Java.use(\"java.lang.Throwable\").$new())); apkParseCompat.isExitPackage.implementation = function(packageName)&#123; send(\"hook start isExitPackage...\"); send(\"参数1：\" + packageName); return true; &#125;&#125;);\"\"\" # 自定义回调函数def on_message(message, data): if message['type'] == 'send': print(\"[*] &#123;0&#125;\".format(message['payload'])) else: print(message)# 重点的4行代码process = frida.get_remote_device().attach('com.hookandroid.apk.sample')script = process.create_script(jscode)script.on('message', on_message)script.load()sys.stdin.read() 123456789101112131415161718进入指定app内存objection -g com.android.settings explore内存中somemory list modules内存中so函数memory list exports libssl.so内存中activityandroid hooking list activities内存中所有类android hooking list classes观察内存类调用android hooking watch class android.bluetooth.BluetoothDevice 12345678启动应用进程frida -U -f com.android.settings 执行脚本python hook.py打开应用%resume","categories":[],"tags":[{"name":"Android","slug":"Android","permalink":"http://hookandroid.com/tags/Android/"},{"name":"逆向","slug":"逆向","permalink":"http://hookandroid.com/tags/%E9%80%86%E5%90%91/"},{"name":"frida","slug":"frida","permalink":"http://hookandroid.com/tags/frida/"}]},{"title":"frida安装教程","slug":"frida安装教程","date":"2020-11-04T07:36:27.000Z","updated":"2020-11-05T08:10:33.872Z","comments":true,"path":"post/frida_install.html","link":"","permalink":"http://hookandroid.com/post/frida_install.html","excerpt":"需要安装python3，及已获取root权限手机或模拟器。","text":"需要安装python3，及已获取root权限手机或模拟器。 安装python3123https:&#x2F;&#x2F;www.python.org&#x2F;downloads&#x2F;release&#x2F;python-360&#x2F;配置环境变量 安装frida更新pip12345678确认pippython -m ensurepip更新pippython -m pip install --upgrade pip安装wheelpip install wheel 安装12345推荐FRIDA稳定版pip install frida&#x3D;&#x3D;12.8.0pip install frida-tools&#x3D;&#x3D;5.3.0pip install objection&#x3D;&#x3D;1.8.4以上安装需要科学上网 运行frida-server下载1234https:&#x2F;&#x2F;github.com&#x2F;frida&#x2F;frida&#x2F;releases含图形化页面服务端https:&#x2F;&#x2F;github.com&#x2F;wrlu&#x2F;FridaHooker 推送到模拟器1234adb push frida-server-12.8.0-android-x86 &#x2F;data&#x2F;local&#x2F;frida-serversuchmod 777 frida-server.&#x2F;frida-server 检测运行状态12345adb forward tcp:27042 tcp:27042adb forward tcp:27043 tcp:27043frida-ps -Ua出现进程列表，表示连接成功","categories":[],"tags":[{"name":"Android","slug":"Android","permalink":"http://hookandroid.com/tags/Android/"},{"name":"逆向","slug":"逆向","permalink":"http://hookandroid.com/tags/%E9%80%86%E5%90%91/"},{"name":"frida","slug":"frida","permalink":"http://hookandroid.com/tags/frida/"}]},{"title":"adb常用命令","slug":"adb常用命令","date":"2020-11-03T10:24:39.000Z","updated":"2020-11-06T09:45:07.689Z","comments":true,"path":"post/adb.html","link":"","permalink":"http://hookandroid.com/post/adb.html","excerpt":"","text":"卸载系统应用1234567891011adb shell pm uninstall [-k] [--user USER_ID] 包名参数说明：-k 卸载应用且保留数据与缓存，如果不加 -k 则全部删除。--user 指定用户 id，Android 系统支持多个用户，默认用户只有一个，id&#x3D;0。可以用这个命令，user 和 debug 版本都可以用，所有应用都能卸载掉。比如这里卸载 360 浏览器：adb shell pm uninstall -k --user 0 com.qihoo.browser恢复安装adb shell pm install-existing --user 0 com.qihoo.browser debug模式启动apk123456789101112debug启动adb shell am start -D -n com.ali.tg.testapp&#x2F;.MainActivity等待debugadb shell am set-debug-app -w com.example.jishuxiaoheiwu.appdebugsample设置持久debugadb shell am set-debug-app -w --persistent com.example.jishuxiaoheiwu.appdebugsample清除持久debugadb shell am clear-debug-app 查看栈顶Activity123adb shell dumpsys activity top | findstr ACTIVITYadb shell dumpsys activity top | findstr pid","categories":[],"tags":[{"name":"adb","slug":"adb","permalink":"http://hookandroid.com/tags/adb/"}]},{"title":"Git基础教程","slug":"Git基础教程","date":"2020-11-03T06:24:25.000Z","updated":"2020-11-13T10:43:28.821Z","comments":true,"path":"post/git.html","link":"","permalink":"http://hookandroid.com/post/git.html","excerpt":"","text":"初始化配置12git config --global user.name &quot;markLee&quot;git config --global user.email &quot;946768930@qq.com&quot; 初始化仓库1git init 基本操作12&#x2F;&#x2F; 添加文件到暂存区，可以多次添加多种文件git add . 12&#x2F;&#x2F; 提交文件到分支git commit -m &quot;版本更新&quot; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108&#x2F;&#x2F; 查看当前仓库状态git status&#x2F;&#x2F; 查看精简日志git log --pretty&#x3D;oneline&#x2F;&#x2F; 查看曾经输入的所有命令git reflog&#x2F;&#x2F; 回退到指定commitgit reset --hard 887ef6b&#x2F;&#x2F; 回退到上一次commitgit reset --hard HEAD^&#x2F;&#x2F; 查看工作区和版本库内容区别git diff HEAD -- readme.txt&#x2F;&#x2F; 撤销修改1.git add之后撤销，回退到add后状态2.git add之前撤销，和版本库状态一样git checkout -- readme.txt&#x2F;&#x2F; 删除文件git rm read.txt&#x2F;&#x2F; 生成公钥ssh-keygen -t rsa -C &quot;youremail@example.com&quot;&#x2F;&#x2F; 关联远程仓库git remote add origin git@github.com:michaelliao&#x2F;learngit.git&#x2F;&#x2F; 删除远程仓库关联git remote rm origin&#x2F;&#x2F; 推送代码&#x2F;&#x2F; -u 表达本地分支和远程分支相关联git push -u origin master&#x2F;&#x2F; Linux与Windows换行符git config --global core.autocrlf false&#x2F;&#x2F; 创建分支并切换git checkout -b devgit switch -c dev&#x2F;&#x2F; 创建本地及远程分支git checkout -b dev origin&#x2F;dev&#x2F;&#x2F; 列出所有分支git branch&#x2F;&#x2F; 删除指定分支git branch -d devgit branch -D dev 强行删除，丢失未提交数据&#x2F;&#x2F; 把dev分支合并到当前分支git merge dev&#x2F;&#x2F; 查看分支合并图git log --graph&#x2F;&#x2F; 合并分支关闭fast forward模式git merge --no-ff -m &quot;merged bug fix 101&quot; issue-101&#x2F;&#x2F; 当前分支已修改文件缓存一下git stashgit stash list 查看当前缓存git stash apply 恢复缓存git stash drop 删除缓存git stash pop 恢复并删除git stash apply stash@&#123;0&#125; 恢复指定缓存&#x2F;&#x2F; 迁移指定commitgit cherry-pick 4c805e2&#x2F;&#x2F; 查看远程分支git remotegit remote -v 详细信息&#x2F;&#x2F; 推送分支git push origin master&#x2F;&#x2F; 本地分支关联远程分支git branch --set-upstream-to&#x3D;origin&#x2F;dev dev&#x2F;&#x2F; 对指定提交打标签git tag v0.9 f52c633&#x2F;&#x2F; 推送指定标签到远程仓库git push origin v1.0&#x2F;&#x2F; 推送所有标签到远程仓库git push origin --tags&#x2F;&#x2F; 删除指定标签git tag -d v1.0&#x2F;&#x2F; 删除远程指定标签git push origin:&#x2F;refs&#x2F;tags&#x2F;v1.0&#x2F;&#x2F; 配置git命令别名git config --global alias.st statusgit config --global alias.lg &quot;log --color --graph --pretty&#x3D;format:&#39;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#39; --abbrev-commit&quot;","categories":[],"tags":[{"name":"Git","slug":"Git","permalink":"http://hookandroid.com/tags/Git/"},{"name":"版本控制","slug":"版本控制","permalink":"http://hookandroid.com/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"}]},{"title":"Android设备CPU架构兼容性","slug":"Android设备CPU架构兼容性","date":"2020-11-02T02:37:50.000Z","updated":"2020-11-03T04:26:32.888Z","comments":true,"path":"post/android_cpu.html","link":"","permalink":"http://hookandroid.com/post/android_cpu.html","excerpt":"CPU设备兼容性","text":"CPU设备兼容性 armeabi设备只兼容armeabi； armeabi-v7a设备兼容armeabi-v7a、armeabi； arm64-v8a设备兼容arm64-v8a、armeabi-v7a、armeabi； X86设备兼容X86、armeabi； X86_64设备兼容X86_64、X86、armeabi； mips64设备兼容mips64、mips； mips只兼容mips；","categories":[{"name":"Android","slug":"Android","permalink":"http://hookandroid.com/categories/Android/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://hookandroid.com/tags/Android/"},{"name":"CPU","slug":"CPU","permalink":"http://hookandroid.com/tags/CPU/"}]}],"categories":[{"name":"Android","slug":"Android","permalink":"http://hookandroid.com/categories/Android/"}],"tags":[{"name":"抓包","slug":"抓包","permalink":"http://hookandroid.com/tags/%E6%8A%93%E5%8C%85/"},{"name":"C语言","slug":"C语言","permalink":"http://hookandroid.com/tags/C%E8%AF%AD%E8%A8%80/"},{"name":"服务器","slug":"服务器","permalink":"http://hookandroid.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"nginx","slug":"nginx","permalink":"http://hookandroid.com/tags/nginx/"},{"name":"Android","slug":"Android","permalink":"http://hookandroid.com/tags/Android/"},{"name":"逆向","slug":"逆向","permalink":"http://hookandroid.com/tags/%E9%80%86%E5%90%91/"},{"name":"frida","slug":"frida","permalink":"http://hookandroid.com/tags/frida/"},{"name":"adb","slug":"adb","permalink":"http://hookandroid.com/tags/adb/"},{"name":"Git","slug":"Git","permalink":"http://hookandroid.com/tags/Git/"},{"name":"版本控制","slug":"版本控制","permalink":"http://hookandroid.com/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"},{"name":"CPU","slug":"CPU","permalink":"http://hookandroid.com/tags/CPU/"}]}